{"ast":null,"code":"// import { createStore } from 'redux'\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment() {},\n\n    decrement() {},\n\n    reset() {},\n\n    toggleCounter() {}\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    // console.log(action)\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'reset') {\n    return {\n      counter: 0,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n}; // const CounterStore = createStore(counterReducer)\n\n\nconst CounterStore = configureStore({\n  reducer: counterReducer\n});\nexport default CounterStore;","map":{"version":3,"names":["configureStore","createSlice","initialState","counter","showCounter","name","reducers","increment","decrement","reset","toggleCounter","counterReducer","state","action","type","amount","CounterStore","reducer"],"sources":["D:/React Js Academind/M13 - Redux/redux-counter/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux'\r\nimport { configureStore, createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = { counter: 0, showCounter: true }\r\n\r\ncreateSlice({\r\n  name: 'counter',\r\n  initialState: initialState,\r\n  reducers: {\r\n    increment() { },\r\n    decrement() { },\r\n    reset() { },\r\n    toggleCounter() { },\r\n  }\r\n})\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === 'increment') {\r\n    // console.log(action)\r\n    return { counter: state.counter + action.amount, showCounter: state.showCounter }\r\n  }\r\n  if (action.type === 'decrement') {\r\n    return { counter: state.counter - action.amount, showCounter: state.showCounter }\r\n  }\r\n  if (action.type === 'reset') {\r\n    return { counter: 0, showCounter: state.showCounter }\r\n  }\r\n\r\n  if (action.type === 'toggle') {\r\n    return { showCounter: !state.showCounter, counter: state.counter }\r\n  }\r\n\r\n  return state\r\n}\r\n\r\n// const CounterStore = createStore(counterReducer)\r\nconst CounterStore = configureStore({ reducer: counterReducer })\r\n\r\nexport default CounterStore"],"mappings":"AAAA;AACA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAArB;AAEAH,WAAW,CAAC;EACVI,IAAI,EAAE,SADI;EAEVH,YAAY,EAAEA,YAFJ;EAGVI,QAAQ,EAAE;IACRC,SAAS,GAAG,CAAG,CADP;;IAERC,SAAS,GAAG,CAAG,CAFP;;IAGRC,KAAK,GAAG,CAAG,CAHH;;IAIRC,aAAa,GAAG,CAAG;;EAJX;AAHA,CAAD,CAAX;;AAWA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBV,YAAyB;EAAA,IAAXW,MAAW;;EACvD,IAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B;IACA,OAAO;MAAEX,OAAO,EAAES,KAAK,CAACT,OAAN,GAAgBU,MAAM,CAACE,MAAlC;MAA0CX,WAAW,EAAEQ,KAAK,CAACR;IAA7D,CAAP;EACD;;EACD,IAAIS,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MAAEX,OAAO,EAAES,KAAK,CAACT,OAAN,GAAgBU,MAAM,CAACE,MAAlC;MAA0CX,WAAW,EAAEQ,KAAK,CAACR;IAA7D,CAAP;EACD;;EACD,IAAIS,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;IAC3B,OAAO;MAAEX,OAAO,EAAE,CAAX;MAAcC,WAAW,EAAEQ,KAAK,CAACR;IAAjC,CAAP;EACD;;EAED,IAAIS,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAO;MAAEV,WAAW,EAAE,CAACQ,KAAK,CAACR,WAAtB;MAAmCD,OAAO,EAAES,KAAK,CAACT;IAAlD,CAAP;EACD;;EAED,OAAOS,KAAP;AACD,CAjBD,C,CAmBA;;;AACA,MAAMI,YAAY,GAAGhB,cAAc,CAAC;EAAEiB,OAAO,EAAEN;AAAX,CAAD,CAAnC;AAEA,eAAeK,YAAf"},"metadata":{},"sourceType":"module"}