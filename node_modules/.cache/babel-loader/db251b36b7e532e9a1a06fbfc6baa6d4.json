{"ast":null,"code":"import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  return state;\n}; // const CounterStore = createStore(counterReducer)\n\n\nconst CounterStore = configureStore({\n  reducer: counterReducer\n});\nexport default CounterStore;","map":{"version":3,"names":["createStore","configureStore","counterReducer","state","counter","action","type","CounterStore","reducer"],"sources":["D:/React Js Academind/M13 - Redux/redux-counter/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nconst counterReducer = (state = { counter: 0 }, action) => {\r\n  if (action.type === 'increment') {\r\n    return { counter: state.counter + 1 }\r\n  }\r\n  if (action.type === 'decrement') {\r\n    return { counter: state.counter - 1 }\r\n  }\r\n\r\n  return state\r\n}\r\n\r\n// const CounterStore = createStore(counterReducer)\r\nconst CounterStore = configureStore({ reducer: counterReducer })\r\n\r\nexport default CounterStore"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,cAAc,GAAG,YAAoC;EAAA,IAAnCC,KAAmC,uEAA3B;IAAEC,OAAO,EAAE;EAAX,CAA2B;EAAA,IAAXC,MAAW;;EACzD,IAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MAAEF,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;IAA3B,CAAP;EACD;;EACD,IAAIC,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MAAEF,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;IAA3B,CAAP;EACD;;EAED,OAAOD,KAAP;AACD,CATD,C,CAWA;;;AACA,MAAMI,YAAY,GAAGN,cAAc,CAAC;EAAEO,OAAO,EAAEN;AAAX,CAAD,CAAnC;AAEA,eAAeK,YAAf"},"metadata":{},"sourceType":"module"}